name: Deploy to Vercel

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      # 确保环境变量正确注入
      VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
      VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
      VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
      CI: true  # 强制非交互模式（核心）

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 关键步骤：彻底清理旧版本 Vercel CLI 并安装最新版
      - name: Clean & Install Latest Vercel CLI
        run: |
          # 卸载全局旧版本（若存在）
          npm uninstall -g vercel
          # 清除 npm 缓存，避免残留旧版本
          npm cache clean --force
          # 强制安装最新版 Vercel CLI（当前最新为 v32+）
          npm install -g vercel@latest
          # 验证版本（确保输出 v32+，而非 25.1.0）
          vercel --version

      # 关键步骤：用最新 CLI 非交互部署
      - name: Deploy to Vercel (Non-Interactive)
        run: |
          vercel deploy \
            --prod \  # 部署到生产环境
            --token $VERCEL_TOKEN \  # 身份验证
            --org-id $VERCEL_ORG_ID \  # 关联组织
            --project-id $VERCEL_PROJECT_ID \  # 关联项目
            --yes \  # 自动确认所有提示（禁用交互）
            --force  # 强制部署（覆盖可能的冲突）
